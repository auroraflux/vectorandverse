---
// Enhanced lightbox component with touch support
---

<div id="lightbox" class="lightbox" aria-hidden="true">
  <button class="lightbox-close" aria-label="Close lightbox">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
      <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
    </svg>
  </button>
  <div class="lightbox-container">
    <img class="lightbox-image" src="" alt="Click to close enlarged image" />
  </div>
  <div class="lightbox-loading">
    <div class="lightbox-spinner"></div>
  </div>
</div>

<style>
  @import "tailwindcss";
  @reference;
  
  .lightbox {
    @apply fixed inset-0 z-50 flex items-center justify-center bg-black/95 opacity-0 pointer-events-none;
    transition: opacity 0.3s ease;
    touch-action: none;
  }
  
  .lightbox.active {
    @apply opacity-100 pointer-events-auto;
  }
  
  .lightbox-close {
    @apply absolute top-4 right-4 text-white hover:text-gray-300 transition-colors p-3 rounded-full;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
    border: none;
    cursor: pointer;
    z-index: 10;
    /* Larger touch target for mobile */
    min-width: 48px;
    min-height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  @media (hover: hover) {
    .lightbox-close:hover {
      background: rgba(0, 0, 0, 0.7);
    }
  }
  
  .lightbox-container {
    @apply relative w-full h-full flex items-center justify-center;
    overflow: hidden;
  }
  
  .lightbox-image {
    @apply max-w-[90vw] max-h-[90vh] object-contain select-none;
    transform-origin: center center;
    transition: transform 0.2s ease;
    will-change: transform;
  }
  
  .lightbox-loading {
    @apply absolute inset-0 flex items-center justify-center pointer-events-none opacity-0;
    transition: opacity 0.2s ease;
  }
  
  .lightbox.loading .lightbox-loading {
    @apply opacity-100;
  }
  
  .lightbox-spinner {
    @apply w-12 h-12 border-4 border-white/20 border-t-white rounded-full animate-spin;
  }
  
  /* Prevent body scroll when lightbox is open */
  body.lightbox-open {
    overflow: hidden;
    touch-action: none;
  }
</style>

<script>
  import { TouchLightbox } from '../lib/components/TouchLightbox';
  
  let lightboxInstance: TouchLightbox | null = null;
  
  function setupLightbox() {
    // Clean up any existing instance
    if (lightboxInstance) {
      lightboxInstance.destroy();
    }
    
    // Initialize new instance
    const lightboxElement = document.getElementById('lightbox') as HTMLDivElement;
    if (lightboxElement) {
      lightboxInstance = TouchLightbox.create(lightboxElement, {
        swipeThreshold: 0.15,
        velocityThreshold: 0.5,
        maxZoom: 3,
        minZoom: 0.5,
        animationDuration: 300
      });
    }
  }
  
  function cleanupLightbox() {
    if (lightboxInstance) {
      lightboxInstance.destroy();
      lightboxInstance = null;
    }
  }
  
  // Initialize on page load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupLightbox);
  } else {
    setupLightbox();
  }
  
  // Handle Astro page transitions
  document.addEventListener('astro:page-load', setupLightbox);
  document.addEventListener('astro:before-swap', cleanupLightbox);
</script>