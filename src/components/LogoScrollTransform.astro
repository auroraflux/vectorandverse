---
import { DIMENSION_CONFIG, ANIMATION_CONFIG } from '../lib/config';

// Component for logo transformation on scroll
// Configuration values passed to client-side script
const scrollThreshold = DIMENSION_CONFIG.animation.scrollThreshold;
const transitionDuration = ANIMATION_CONFIG.durations.normal;
---

<!-- Empty element to ensure component is rendered -->
<div data-logo-scroll-transform 
     data-scroll-threshold={scrollThreshold}
     data-transition-duration={transitionDuration}></div>

<script>
  function initLogoTransform() {
    // Only run on homepage
    const heroSection = document.querySelector('.hero-section');
    if (!heroSection) return;

    // Create sticky header using safe DOM manipulation
    const stickyHeader = document.createElement('div');
    stickyHeader.className = 'sticky-header';
    
    // Create sticky header content container
    const stickyHeaderContent = document.createElement('div');
    stickyHeaderContent.className = 'sticky-header-content';
    
    // Create logo link
    const logoLink = document.createElement('a');
    logoLink.href = '/';
    logoLink.className = 'sticky-logo group no-underline';
    
    // Create logo text spans
    const kiloSpan = document.createElement('span');
    kiloSpan.style.fontWeight = '900';
    kiloSpan.textContent = 'kilo';
    
    const whatSpan = document.createElement('span');
    whatSpan.style.fontWeight = '900';
    whatSpan.style.fontStyle = 'italic';
    whatSpan.textContent = 'what!?';
    
    logoLink.appendChild(kiloSpan);
    logoLink.appendChild(whatSpan);
    
    // Create about link
    const aboutLink = document.createElement('a');
    aboutLink.href = '/about';
    const configElement = document.querySelector('[data-logo-scroll-transform]');
    const duration = configElement?.dataset.transitionDuration || '300';
    aboutLink.className = `text-sm text-gray-600 hover:text-gray-900 transition-all hover:translate-x-1`;
    aboutLink.style.transitionDuration = `${duration}ms`;
    aboutLink.style.fontWeight = '500';
    aboutLink.textContent = 'About';
    
    // Assemble the header
    stickyHeaderContent.appendChild(logoLink);
    stickyHeaderContent.appendChild(aboutLink);
    stickyHeader.appendChild(stickyHeaderContent);
    
    document.body.appendChild(stickyHeader);

    let lastScrollY = 0;
    let ticking = false;

    function updateHeader() {
      const scrollY = window.scrollY;
      const heroHeight = heroSection.offsetHeight;
      const configElement = document.querySelector('[data-logo-scroll-transform]');
      const threshold = configElement ? 
        parseInt(configElement.dataset.scrollThreshold) : 100; // Use config or fallback

      if (scrollY > threshold) {
        stickyHeader.classList.add('visible');
        heroSection.classList.add('scrolled');
      } else {
        stickyHeader.classList.remove('visible');
        heroSection.classList.remove('scrolled');
      }

      lastScrollY = scrollY;
      ticking = false;
    }

    function requestTick() {
      if (!ticking) {
        window.requestAnimationFrame(updateHeader);
        ticking = true;
      }
    }

    // Listen for scroll events
    window.addEventListener('scroll', requestTick, { passive: true });

    // Initial update
    updateHeader();

    // Clean up on page navigation
    document.addEventListener('astro:before-swap', () => {
      window.removeEventListener('scroll', requestTick);
      stickyHeader?.remove();
    });
  }

  // Initialize on page load
  document.addEventListener('astro:page-load', initLogoTransform);
</script>